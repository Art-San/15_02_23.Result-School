// в уроке только это добавили

app.use(express.json())
app.use(express.urlencoded({extended: false}))

// В Express app.use()это метод, используемый для монтирования 
// функций промежуточного программного обеспечения в определенном порядке. 
// Функции промежуточного программного обеспечения — это функции, 
// которые имеют доступ к объектам requestи responseи могут изменять 
// их или выполнять другие задачи до того, как будет выполнен фактический обработчик маршрута.

// express.json()и express.urlencoded()две встроенные 
// функции промежуточного программного обеспечения в Express, 
// которые обычно используются для обработки данных в HTTP-запросах. 
// Вот краткое объяснение каждого:

// express.json(): эта функция промежуточного программного 
// обеспечения анализирует входящие запросы с полезными данными JSON 
// и предоставляет проанализированный объект в формате req.body. 
// Обычно он используется для обработки запросов POST, PUT и PATCH, 
// которые содержат полезные данные JSON в теле запроса. Для этого требуется, 
// Content-Type чтобы заголовок был установлен на application/json.

// express.urlencoded({extended: false}): эта функция промежуточного программного 
// обеспечения анализирует входящие запросы с полезной нагрузкой, закодированной в urlencode, 
// и предоставляет проанализированный объект в формате req.body. 
// Обычно он используется для обработки POST-запросов, которые содержат данные 
// в кодировке urlencode в теле запроса. Для этого требуется, Content-Type чтобы 
// заголовок был установлен на application/x-www-form-urlencoded. 
// Параметр extended имеет значение false, что означает, 
// что значения данных в кодировке URL не анализируются во вложенные объекты. 
// Если вам нужно проанализировать вложенные объекты, 
// вы можете установить для этого параметра значение true.

// Таким образом, app.use(express.json())и app.use(express.urlencoded({extended: false}))используются 
// для добавления промежуточного программного обеспечения в ваше приложение Express, 
// которое может обрабатывать входящие запросы с полезными нагрузками JSON и urlencoded соответственно.