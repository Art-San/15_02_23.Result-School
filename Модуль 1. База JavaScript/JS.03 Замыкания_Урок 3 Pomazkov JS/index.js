// ЗАМЫКАНИЯ В JS за 15 минут: ОТ и ДО | Что такое лексическое окружение и как связано с замыканием?
// https://www.youtube.com/watch?v=mI6Jcfsgma4

//---------------для понимания замыкания  Первое  что нужно понять это
//--------------------------- ЛЕКСИЧЕСКОЕ ОКРУЖЕНИЕ ---------------------
// Лексическое окружение
// - это невидимый (скрытый)
// объект который есть у любого блока
// скрипта или функции в JavScript

// Этот объект состоит из двух частей

// 1. Это объект с переменными в текущей области видимости
// 2. Ссылка на родительское (то есть внешнее ликсическое окружение)

// const x = 1

// const y = function () {
//     const i = 'Hi'
//     console.log(i)
// }
// В этом коде два лексических окружения
// 1. глобальное
// ссылка на род. окружение: -> null //(так как над глобальным лексически окружением ни чего нет)
// переменные: {x: 1 и y: фукция}
// // Имеет доступ только к своим переменным

// 2. локальное (внутри функции y)  // Важно: Будет создано только во время вызова функции
// ссылка: -> на глобальное лекс. окр.
// переменные: { i: 'Hi'}
// Имеет дотуп ко всем переменным

//================== Пример =======================================
// const x = 1

// const logToConsole = function () {
//     const i = 'Hi'
//     console.log(i)
// }

// logToConsole()

// читаемм сверху вниз
// Создается
// 1. глобальное
// ссылка: -> null
// переменные: {
//     x:1
//     logToConsole: function
// }

// // потом происходит вызов вункции logToConsole()
// создается
// 2. локальное(logToConsole)
// ссылка: -> на глобальное лекс. окруж
// переменные: {
//     i: 'Hi'
// }
// i='Hi' Выводится в консоль

//===============================================

// Замыкание - зто способность функции в JS запоминать лексическое окружение,
// в котором она была создана
//--------------------То есть хранить в себе ссылку на это окружение

const x = 1

const logToConsole = function () {
    console.log(x)
}

logToConsole()

// читаемм сверху вниз
// Создается
1. глобальное
ссылка: -> null
переменные: {
    x:1
    logToConsole: function
}

// потом происходит вызов вункции logToConsole()
// создается
2. локальное(logToConsole)
ссылка: -> на глобальное лекс. окруж
переменные: {
    Не нходит переменную "Х",
    Смотрит по ссылке в "Глобальное", и там находит "Х"
}

// ------ Усложняем
let x = 1

const logToConsole = function () {
    console.log(x)
}

x = 2

logToConsole()

х = 3

В консоле будет 2, так как возметься из глобального
лексического окружения актуальное значение "х" на момент вызова функции
