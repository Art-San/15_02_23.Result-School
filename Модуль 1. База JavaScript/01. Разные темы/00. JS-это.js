// 1. JavaScript является встраиваемым языком скриптов,
// что означает, что он не может существовать сам по себе
// и должен быть встроен в какую-либо среду.
// Обычно JavaScript встроен либо в веб-браузер,
// либо в среду выполнения, такую как Node.js или D8.

// Следовательно, в JavaScript существуют два основных набора функций:
// те, которые определены спецификацией языка (ECMAScript), и сторонние API,
// предоставляемые окружением, которые позволяют JavaScript взаимодействовать
// с внешними ресурсами и выполнять задачи, не определенные в самой спецификации языка.

// JavaScript не имеет встроенных возможностей для ввода и вывода,
// таких как чтение файлов, работа с сетью или доступ к консоли.
// Это значит, что он не может самостоятельно получать или выводить данные.
// Эти возможности ему предоставляют внешние среды, в которые он встроен.

// Среда, в которую встроен JavaScript, в спецификации называется HOST (хост).
// Распространенными названиями встроенной части языка в хосте являются runtime или,
// в соответствии со спецификацией, Agent. То есть, внутри определенной среды встроен агент,
// который выполняет код JavaScript. Типичными агентами являются такие, как V8 (Chrome),
// SpiderMonkey (Mozilla Firefox), и JavaScriptCore (Apple).
// ============================================================================
// Три вещи которые надо знать и понимать и тогда вы поймете js

// 1. Это встраиваемость jd
// 2. Интерпретация
// 3. Прототипное модельное исследование

// В целом, твой список важных аспектов JavaScript является неплохим началом,
// но давай уточним и немного скорректируем их, чтобы они точно отражали ключевые моменты,
// необходимые для понимания JavaScript.

// 1. Встраиваемость (Embedded Nature)

// * Что это означает: JavaScript является встраиваемым языком,
// который не существует сам по себе, а работает внутри окружения,
// будь то браузер, Node.js или другая среда. Именно это окружение предоставляет
// дополнительные API и определяет, как именно будет работать JavaScript.

// ** Почему это важно: Понимание того, как JavaScript взаимодействует
// с окружением (DOM в браузере, файловая система в Node.js и т.д.)
// помогает лучше использовать возможности языка и избегать ошибок.

// 2. Интерпретация (Interpretation and Execution Context)

// * Что это означает: JavaScript интерпретируется и выполняется в окружении
// в режиме реального времени. Код выполняется строка за строкой,
// что отличается от компиляции, которая происходит перед запуском программы.

// ** Почему это важно: Понимание того, как JavaScript интерпретирует и выполняет код,
// позволяет лучше понять порядок выполнения кода, как создаются и используются переменные,
// контексты выполнения, а также как работает this.

// 3. Прототипное наследование (Prototype-based Inheritance)

// * Что это означает: В JavaScript наследование реализовано через прототипы.
// Каждый объект может иметь прототип, от которого он наследует свойства и методы.

// ** Почему это важно: Понимание прототипного наследования является ключевым
// для работы с объектами, классами и конструкторами в JavaScript.
// Это также важно для понимания работы встроенных объектов и методов,
// а также для создания эффективного и переиспользуемого кода.

// Заключение:
// Эти три аспекта действительно составляют основу для глубокого понимания JavaScript:

// 1. Встраиваемость помогает понять роль окружения.
// 2. Интерпретация и выполнение кода раскрывают, как работает JavaScript в реальном времени.
// 3. Прототипное наследование объясняет, как устроены объекты и классы в языке.
