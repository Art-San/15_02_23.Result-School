// В нашем примере уже есть два значения, которые зависят от среды разработки. 
// Сейчас можно сказать, что у нас develop-среда, сервер с API для неё, 
// а также наш Sentry смотрит на окружение для разработки. 
// Очень часто бывает так, что у нас есть несколько сред (dev / prod), 
// и при deploy (разворачивании нашего приложения на сервере) 
// нам нужно направлять запросы на адреса соответствующих 
// серверов (разные для разных сред). 
// Для этого при создании pipeline 
// (последовательности шагов для развертывания приложения на сервере) 
// добавляется шаг по присваиванию некоторых значений в зависимости от среды.

// Сейчас наши переменные - это:

export const request = axios.create({
    baseURL: "https://63325179a54a0e83d24f09e2.mockapi.io/api/v1"
});

Sentry.init({
    dsn: "https://546be531c00e41b6b7b6c0b98ee7e74b@o4503925366784000.ingest.sentry.io/4503925374844928",
    integrations: [new BrowserTracing()],
    tracesSampleRate: 1.0
});

// Они находятся в разных файлах, искать их, чтобы заменить значение, будет неудобно. 
// Кроме того, мы можем поменять расположение файлов в проекте по каким-либо соображениям.
//  Для того, чтобы менять значения было удобнее, их можно перенести в специальные 
//  .env файлы. Для dev будут одни значения, для production — другие. 
//  Нужное значение будет выбрано в зависимости от среды и подставится в нужное место. 
//  С этими файлами столкнемся немного позже, а пока давай их вынесем 
//  в отдельный объект config, чтобы не хранить их прямо в коде:

// src/config.js
export const config = {
    API_BASE_URL: "https://63325179a54a0e83d24f09e2.mockapi.io/api/v1",
    SENTRY_DNS: "https://546be531c00e41b6b7b6c0b98ee7e74b@o4503925366784000.ingest.sentry.io/4503925374844928"
}; 

// Мы добавили в него базовый адрес для API-запросов и адрес DNS Sentry. 
// Обрати внимание, что названия написаны заглавными буквами. 
// Это делать необязательно, но это тебе говорит, что это не переменная, 
// а константа. Такой подход к объявлению переменных можно встретить 
// в руководствах по стилю кода (например, в Google JavaScript Style Guide, ссылка).

// Теперь используем его в request.js:

import axios from "axios";
import { toast } from "react-toastify";
import { logger } from "../services/logger";
import { config } from "../config";

export const request = axios.create({
    baseURL: config.API_BASE_URL
});

// и также в logger.js:

import * as Sentry from "@sentry/react";
import { BrowserTracing } from "@sentry/tracing";
import { config } from "../config";

// Инициализация логгера
function init() {
    Sentry.init({
        dsn: config.SENTRY_DNS,
        integrations: [new BrowserTracing()],
        tracesSampleRate: 1.0
    });
}

// Таким образом мы можем хранить и прочие значения. 