
// Также обрати внимание!
// Если после добавления компонента Link на 02:38 у тебя не происходит переход на другой роут, 
// то необходимо в index.js компонент React.StrictMode переместить внутрь компонента BrowserRouter таким образом:

<BrowserRouter>
    <React.StrictMode>
        <App />
    </React.StrictMode>
</BrowserRouter>

// В текущий момент при клике на ссылку наша страница перезагружается полностью. 
// Однако в bundle нашего приложения уже есть все страницы. Следовательно, 
// нам не нужно, чтобы страница перезагружалась каждый раз. 
// Нужно, чтобы происходила смена пути, и при смене появлялся контент из нужного роута. 

// Для этой цели в react-router-dom есть компонент Link. 
// Давай им воспользуемся в компоненте Navbar:

import React from "react";
import { Link } from "react-router-dom";

const Navbar = () => {
    return (
        <ul>
            <li>
                <Link to="/">Главная</Link>
            </li>
            <li>
                <Link to="/signin">Вход в кабинет</Link>
            </li>
            <li>
                <Link to="/posts">Записи</Link>
            </li>
            <li>
                <Link to="/contacts">Контакты</Link>
            </li>
        </ul>
    );
};

export default Navbar;

// Теперь можно протестировать переключение страниц. 
// При нажатии на ссылки у нас не будет перезагружаться страница.  

// Если говорить о компоненте Link, то, по сути, это обёртка, 
// которая добавляет обработчик событий на ссылку. 